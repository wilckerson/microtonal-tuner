{"version":3,"sources":["components/Permission.tsx","core/TuningMath.ts","components/TunerGauge.tsx","core/FrequencyAnalyzer.ts","core/TunerAnalyzer.ts","core/DefaultTuningData.ts","core/LocalData.ts","components/Tuner.tsx","pages/Home.tsx","components/TopBar.tsx","pages/RootNote.tsx","pages/TuningList.tsx","App.tsx","theme.js","index.js"],"names":["Permission","props","useState","denied","setDenied","a","navigator","mediaDevices","getUserMedia","audio","video","onAllow","Box","pt","textAlign","style","fontSize","Typography","variant","Button","color","onClick","TuningMath","ratio","Math","log2","currentFreq","rootFreq","tuningBase","normalizedFreq","fromRatio","toRatio","diff","abs","baseDiff","min","numberOfDivisions","base","noteNames","notes","i","noteRatio","pow","noteInfo","index","name","cents","this","RatioToCents","freq","push","JND_CENTS","TunerGauge","gaugeRef","useRef","undefined","gaugeInstance","setGaugeInstance","useEffect","tunedRegion","centsRange","almostTunedRegion","almostTunedRegionColor","almostTunedRegionHeight","otherRegionColor","otherRegionHeight","opts","angle","lineWidth","pointer","length","strokeWidth","colorStart","strokeColor","staticZones","strokeStyle","max","height","gauge","GaugeObjects","Gauge","current","setOptions","maxValue","setMinValue","animationSpeed","set","initGauge","value","ref","width","FrequencyAnalyzer","onFrequencyCallback","loopRef","analyzer","timeDomainData","startTime","bitCounter","globk","loopTime","audioCtx","window","AudioContext","webkitAudioContext","createAnalyser","sampleRate","fftSize","smoothingTimeConstant","noiseSuppression","echoCancellation","mediaStream","createMediaStreamSource","connect","Float32Array","Date","now","setInterval","analyzerLoop","clearInterval","getFloatTimeDomainData","waveLengthResult","findWaveLength","ceil","frequency","e","r","t","o","n","s","u","c","l","m","d","g","f","h","w","A","dd","C","D","v","y","p","T","F","b","k","ddd","N","TunerAnalyzer","tuningData","GetNormalizedRatioFromFrequency","closest","reduce","prev","curr","calculateRatioDiff","ratioCents","baseCentsOff","ratioCentsOff","centsOff","noteIndex","noteName","get12EdoData","getEqualTemperamentData","get19EdoData","get22EdoData","get31EdoData","get41EdoData","LocalData","setRootNote","rootNote","localStorage","setItem","toString","getRootNote","rootNoteText","getItem","parseFloat","getCurrentTuningIndex","currentTuningIndexText","parseInt","setCurrentTuningIndex","getTuningList","tuningListText","JSON","parse","DefaultTuningData","useStyles","makeStyles","tunedNote","textShadow","Tuner","classes","setCentsOff","setNoteName","setNoteIndex","currentTuningIndex","tuningName","setTuningName","setFrequency","history","useHistory","analyzedNote","analyzeFrequency","start","stop","noteStyle","Grid","container","spacing","item","xs","fullWidth","endIcon","textTransform","mt","alignItems","toFixed","className","Home","isMicAlreadyAllowed","micAllowed","setMicAllowed","AppBar","position","Toolbar","Container","maxWidth","TopBar","IconButton","edge","goBack","title","visibility","RootNote","rootNoteValue","setRootNoteValue","my","TextField","label","type","inputProps","step","InputProps","endAdornment","InputAdornment","onChange","target","TuningList","tuningListData","List","component","map","ListItem","button","handleClick","Divider","App","exact","path","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.7bd46d96.chunk.js","sourcesContent":["import { Box, Button, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\r\n\r\ntype Props = {\r\n  onAllow: () => void;\r\n};\r\n\r\nconst Permission = (props: Props) => {\r\n  const [denied, setDenied] = useState(false);\r\n\r\n  async function handleClick() {\r\n    try {\r\n      var mediaStream = await navigator.mediaDevices.getUserMedia({\r\n        audio: true,\r\n        video: false,\r\n      });\r\n      //console.log(\"media\", mediaStream);\r\n      props.onAllow();\r\n    } catch (e) {\r\n      //console.log(\"catch\", e);\r\n      setDenied(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box pt={5} textAlign=\"center\">\r\n      {!denied && (\r\n        <div>\r\n          <MicIcon style={{ fontSize: \"5rem\" }} />\r\n\r\n          <Typography variant=\"h6\">\r\n            This tuner works using the microphone on your device.\r\n          </Typography>\r\n          <p>Please, use the button below and them press \"Allow\".</p>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n            Allow my microphone use\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {denied && (\r\n        <div>\r\n          <MicOffIcon style={{ fontSize: \"5rem\" }} />\r\n\r\n          <Typography variant=\"h6\">Microphone permission denied :(</Typography>\r\n          <p>\r\n            Please, reload the page and try again. If reloading does not help,\r\n            open the browser settings and remove the denied microphone\r\n            permission.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Permission;\r\n","export type NoteInfo = {\r\n  index: number;\r\n  name: string;\r\n  ratio: number;\r\n  cents: number;\r\n  freq: number;\r\n};\r\nexport type TuningData = {\r\n  name?: string;\r\n  base: number;\r\n  notes: NoteInfo[];\r\n};\r\n\r\nexport default class TuningMath {\r\n  //JustNoticeableDifference\r\n  public static readonly JND_CENTS = 7;\r\n\r\n  public static RatioToCents(ratio: number): number {\r\n    const c = 1200 * Math.log2(ratio);\r\n    return c;\r\n  }\r\n  public static GetNormalizedRatioFromFrequency(\r\n    currentFreq: number,\r\n    rootFreq: number,\r\n    tuningBase: number\r\n  ): number {\r\n    var normalizedFreq = currentFreq;\r\n\r\n    while (normalizedFreq > rootFreq) {\r\n      normalizedFreq = normalizedFreq / tuningBase;\r\n    }\r\n\r\n    while (normalizedFreq < rootFreq) {\r\n      normalizedFreq = normalizedFreq * tuningBase;\r\n    }\r\n\r\n    var ratio = normalizedFreq / rootFreq;\r\n    return ratio;\r\n  }\r\n  public static calculateRatioDiff(\r\n    fromRatio: number,\r\n    toRatio: number,\r\n    tuningBase: number\r\n  ): number {\r\n    var diff = Math.abs(fromRatio - toRatio);\r\n\r\n    if (fromRatio === 1) {\r\n      const baseDiff = Math.abs(tuningBase - toRatio);\r\n      diff = Math.min(diff, baseDiff);\r\n    }\r\n\r\n    return diff;\r\n  }\r\n\r\n  public static getEqualTemperamentData(\r\n    numberOfDivisions: number,\r\n    base: number,\r\n    rootFreq: number,\r\n    noteNames: string[]\r\n  ) {\r\n    var notes: any[] = [];\r\n    for (let i = 0; i < numberOfDivisions; i++) {\r\n      var noteRatio = Math.pow(base, i / numberOfDivisions);\r\n      var noteInfo: NoteInfo = {\r\n        index: i + 1,\r\n        name: noteNames[i],\r\n        ratio: noteRatio,\r\n        cents: this.RatioToCents(noteRatio),\r\n        freq: rootFreq * noteRatio,\r\n      };\r\n      notes.push(noteInfo);\r\n    }\r\n    var tuningData: TuningData = {\r\n      base: base,\r\n      notes: notes,\r\n    };\r\n    return tuningData;\r\n  }\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport GaugeObjects from \"gaugeJS/dist/gauge\";\r\nimport TuningMath from \"../core/TuningMath\";\r\n//import { useWindowSize } from \"@react-hook/window-size\";\r\n\r\ninterface TunerGaugeProps {\r\n  value: number;\r\n}\r\nfunction TunerGauge(props: TunerGaugeProps) {\r\n  const gaugeRef = useRef<HTMLCanvasElement>(null);\r\n  //const [windowWidth, windowHeight] = useWindowSize({ wait: 500 });\r\n  const [gaugeInstance, setGaugeInstance] = useState<any>(undefined);\r\n\r\n  useEffect(() => {\r\n    initGauge();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   initGauge();\r\n  //   console.log(\"resize\");\r\n  // }, [windowWidth, windowHeight]);\r\n\r\n  useEffect(() => {\r\n    if (gaugeInstance) {\r\n      gaugeInstance.set(props.value);\r\n    }\r\n  }, [props.value, gaugeInstance]);\r\n\r\n  function initGauge() {\r\n    var tunedRegion = TuningMath.JND_CENTS;\r\n    var tunedRegionHeight = 10;\r\n    var tunedRegionColor = \"#00a04d\";\r\n\r\n    var centsRange = 100;\r\n    var almostTunedRegion = centsRange * 0.39;\r\n    var almostTunedRegionColor = \"#ffa500\";\r\n    var almostTunedRegionHeight = 5;\r\n\r\n    var otherRegionColor = \"#aaa\";\r\n    var otherRegionHeight = 2;\r\n\r\n    var opts = {\r\n      angle: 0.15, /// The span of the gauge arc\r\n      lineWidth: 0.015, // The line thickness\r\n      pointer: {\r\n        length: 0.52, // Relative to gauge radius\r\n        strokeWidth: 0.035, // The thickness\r\n      },\r\n      colorStart: \"#aaa\", // Colors\r\n      //colorStop: \"#ff0000\", // just experiment with them\r\n      strokeColor: \"#aaa\", // to see which osnes work best for you\r\n      staticZones: [\r\n        {\r\n          strokeStyle: tunedRegionColor,\r\n          min: -tunedRegion,\r\n          max: tunedRegion,\r\n          height: tunedRegionHeight,\r\n        },\r\n        {\r\n          strokeStyle: almostTunedRegionColor,\r\n          min: tunedRegion,\r\n          max: almostTunedRegion,\r\n          height: almostTunedRegionHeight,\r\n        },\r\n        {\r\n          strokeStyle: almostTunedRegionColor,\r\n          min: -almostTunedRegion,\r\n          max: -tunedRegion,\r\n          height: almostTunedRegionHeight,\r\n        },\r\n        {\r\n          strokeStyle: otherRegionColor,\r\n          min: almostTunedRegion,\r\n          max: centsRange,\r\n          height: otherRegionHeight,\r\n        },\r\n        {\r\n          strokeStyle: otherRegionColor,\r\n          min: -centsRange,\r\n          max: -almostTunedRegion,\r\n          height: otherRegionHeight,\r\n        },\r\n      ],\r\n    };\r\n    var gauge = new GaugeObjects.Gauge(gaugeRef.current).setOptions(opts);\r\n    gauge.maxValue = centsRange; // set max gauge value\r\n    gauge.setMinValue(-centsRange); // Prefer setter over gauge.minValue = 0\r\n    gauge.animationSpeed = 32; // set animation speed (32 is default value)\r\n    gauge.set(0); // set actual value\r\n\r\n    setGaugeInstance(gauge);\r\n  }\r\n\r\n  return (\r\n    <canvas\r\n      ref={gaugeRef}\r\n      //  width={300} height={300}\r\n      style={{ width: \"100%\" }}\r\n    ></canvas>\r\n  );\r\n}\r\n\r\nexport default TunerGauge;\r\n","type OnFrequencyCallback = (frequency: number) => void;\r\n\r\nclass FrequencyAnalyzer {\r\n  loopRef!: NodeJS.Timeout;\r\n  analyzer!: AnalyserNode;\r\n  timeDomainData!: Float32Array;\r\n  startTime: number;\r\n  bitCounter: number;\r\n  globk: number;\r\n  onFrequencyCallback: OnFrequencyCallback;\r\n  loopTime = 700; //900;\r\n\r\n  constructor(onFrequencyCallback: OnFrequencyCallback) {\r\n    this.startTime = 0;\r\n    this.bitCounter = 0;\r\n    this.globk = 1;\r\n    this.onFrequencyCallback = onFrequencyCallback;\r\n  }\r\n\r\n  async start() {\r\n    const audioCtx = new (window.AudioContext ||\r\n      (window as any).webkitAudioContext)();\r\n\r\n    this.analyzer = audioCtx.createAnalyser();\r\n\r\n    this.globk = 1;\r\n    if (audioCtx.sampleRate > 160000) {\r\n      this.globk = 4;\r\n    } else if (audioCtx.sampleRate > 90000) {\r\n      this.globk = 2;\r\n    }\r\n    this.analyzer.fftSize = this.globk * 4096;\r\n    this.analyzer.smoothingTimeConstant = 0;\r\n    //var r = new Date(new Date().getTime() + 2592e6);\r\n\r\n    const mediaStream = await navigator?.mediaDevices?.getUserMedia({\r\n      audio: {\r\n        noiseSuppression: !1,\r\n        echoCancellation: !0,\r\n      },\r\n    });\r\n\r\n    const source = audioCtx.createMediaStreamSource(mediaStream);\r\n    source.connect(this.analyzer);\r\n    this.timeDomainData = new Float32Array(this.analyzer.fftSize);\r\n    this.bitCounter = audioCtx.sampleRate;\r\n    this.startTime = Date.now();\r\n\r\n    this.loopRef = setInterval(() => {\r\n      this.startTime = Date.now();\r\n      this.analyzerLoop();\r\n    }, this.loopTime);\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.loopRef);\r\n  }\r\n\r\n  analyzerLoop() {\r\n    this.analyzer.getFloatTimeDomainData(this.timeDomainData);\r\n    const waveLengthResult = this.findWaveLength(\r\n      this.timeDomainData,\r\n      this.globk * 24,\r\n      this.globk * 1200,\r\n      10,\r\n      10,\r\n      0.016,\r\n      Math.ceil(10 / this.globk)\r\n    );\r\n    const frequency = this.bitCounter / waveLengthResult;\r\n\r\n    if (frequency > 0 && this.onFrequencyCallback !== undefined) {\r\n      this.onFrequencyCallback(frequency);\r\n    }\r\n  }\r\n\r\n  ///Based on code used in https://tuner-online.com/\r\n  findWaveLength(\r\n    e: Float32Array,\r\n    r: number,\r\n    t: number,\r\n    o: number,\r\n    n: number,\r\n    a: number,\r\n    i: number\r\n  ) {\r\n    let s = [];\r\n    let u = 0,\r\n      c = 0,\r\n      l = 0;\r\n    for (let m = 0; m < e.length - 1; m++) {\r\n      s.push(e[m]);\r\n      for (var d = 1; i > d; d++) {\r\n        s.push(e[m] + ((e[m + 1] - e[m]) * d) / i);\r\n      }\r\n    }\r\n    s.push(e[e.length - 1]);\r\n    r *= i;\r\n    t *= i;\r\n\r\n    let g = s.length,\r\n      f = [],\r\n      h = 0,\r\n      w = 0,\r\n      A = 0;\r\n    for (let dd = 0; t > dd; dd++) {\r\n      if (Math.abs(s[dd]) > h) {\r\n        w = dd;\r\n        h = Math.abs(s[dd]);\r\n      }\r\n      A += Math.abs(s[dd]);\r\n    }\r\n    if (a > A / t) return -1;\r\n    if (0 === w || w === t) return -1;\r\n    for (\r\n      var C = 0,\r\n        D = 0,\r\n        v = 0,\r\n        y = 0,\r\n        p = 0,\r\n        T = 0,\r\n        F = 0,\r\n        b = 0,\r\n        k = 0,\r\n        ddd = r;\r\n      t >= ddd;\r\n      ddd++\r\n    ) {\r\n      F = 0;\r\n      b = 0;\r\n      C = 0;\r\n      D = 0;\r\n      for (var N = w; g > N; N += ddd) {\r\n        F += s[N];\r\n        if (0 !== b && g - 5 * i > N) {\r\n          k = s[N] / s[w];\r\n          if (k > 0) {\r\n            if (k > 1) {\r\n              k = 1;\r\n            }\r\n            u = s[N];\r\n            l = s[N - 5 * i];\r\n            c = s[N + 5 * i];\r\n            if (s[w] >= 0) {\r\n              if (u > c && u > l) {\r\n                C += (k * k * k * k * s[w] * o * (t - ddd)) / t;\r\n                D++;\r\n              }\r\n            } else if (c > u && l > u) {\r\n              C += (k * k * k * k * s[w] * o * (t - ddd)) / t;\r\n              D++;\r\n            }\r\n          }\r\n        }\r\n        b++;\r\n        if (b >= n) {\r\n          N = g;\r\n        }\r\n      }\r\n      F += (C * D) / b;\r\n      F /= b;\r\n      if (F > v) {\r\n        v = F;\r\n        p = ddd;\r\n      } else if (y > F) {\r\n        y = F;\r\n        T = ddd;\r\n      }\r\n      f.push(F);\r\n    }\r\n    return s[w] >= 0 ? p / i : T / i;\r\n  }\r\n}\r\n\r\nexport default FrequencyAnalyzer;\r\n","import TuningMath, { TuningData } from \"./TuningMath\";\r\n\r\nclass TunerAnalyzer {\r\n  //constructor() {}\r\n\r\n  static analyzeFrequency(\r\n    tuningData: TuningData,\r\n    currentFreq: number,\r\n    rootFreq: number\r\n  ) {\r\n    const ratio = TuningMath.GetNormalizedRatioFromFrequency(\r\n      currentFreq,\r\n      rootFreq,\r\n      tuningData.base\r\n    );\r\n\r\n    //Search for te closest note\r\n    const closest = tuningData.notes.reduce(function (prev, curr) {\r\n      var currDiff = TuningMath.calculateRatioDiff(\r\n        curr.ratio,\r\n        ratio,\r\n        tuningData.base\r\n      );\r\n      var prevDiff = TuningMath.calculateRatioDiff(\r\n        prev.ratio,\r\n        ratio,\r\n        tuningData.base\r\n      );\r\n\r\n      return currDiff < prevDiff ? curr : prev;\r\n    });\r\n\r\n    //Calculate de cents difference\r\n    const ratioCents = TuningMath.RatioToCents(ratio);\r\n    const baseCents = TuningMath.RatioToCents(tuningData.base);\r\n\r\n    const baseCentsOff = ratioCents - baseCents;\r\n    const ratioCentsOff = ratioCents - closest.cents;\r\n    const centsOff =\r\n      Math.abs(baseCentsOff) < Math.abs(ratioCentsOff)\r\n        ? baseCentsOff\r\n        : ratioCentsOff;\r\n\r\n    return {\r\n      noteIndex: closest.index,\r\n      noteName: closest.name,\r\n      centsOff: centsOff,\r\n    };\r\n  }\r\n}\r\n\r\nexport default TunerAnalyzer;\r\n","import TuningMath, { TuningData } from \"./TuningMath\";\r\n\r\nconst tuningData = {\r\n  get12EdoData(rootFreq: number): TuningData {\r\n    var noteNames = [\r\n      \"A\",\r\n      \"A#\",\r\n      \"B\",\r\n      \"C\",\r\n      \"C#\",\r\n      \"D\",\r\n      \"D#\",\r\n      \"E\",\r\n      \"F\",\r\n      \"F#\",\r\n      \"G\",\r\n      \"G#\",\r\n    ];\r\n    const tuningData = TuningMath.getEqualTemperamentData(\r\n      12,\r\n      2,\r\n      rootFreq,\r\n      noteNames\r\n    );\r\n    tuningData.name = \"12EDO\";\r\n    return tuningData;\r\n  },\r\n\r\n  get19EdoData(rootFreq: number): TuningData {\r\n    var noteNames = [\r\n      \"A\",\r\n      \"A#\",\r\n      \"Bb\",\r\n      \"B\",\r\n      \"B#\",\r\n      \"C\",\r\n      \"C#\",\r\n      \"Db\",\r\n      \"D\",\r\n      \"D#\",\r\n      \"Eb\",\r\n      \"E\",\r\n      \"E#\",\r\n      \"F\",\r\n      \"F#\",\r\n      \"Gb\",\r\n      \"G\",\r\n      \"G#\",\r\n      \"Ab\",\r\n    ];\r\n    const tuningData = TuningMath.getEqualTemperamentData(\r\n      19,\r\n      2,\r\n      rootFreq,\r\n      noteNames\r\n    );\r\n    tuningData.name = \"19EDO\";\r\n    return tuningData;\r\n  },\r\n\r\n  get22EdoData(rootFreq: number): TuningData {\r\n    var noteNames: string[] = [];\r\n    const tuningData = TuningMath.getEqualTemperamentData(\r\n      22,\r\n      2,\r\n      rootFreq,\r\n      noteNames\r\n    );\r\n    tuningData.name = \"22EDO\";\r\n    return tuningData;\r\n  },\r\n\r\n  get31EdoData(rootFreq: number): TuningData {\r\n    var noteNames: string[] = [\r\n      \"A\",\r\n      \"Bbb\",\r\n      \"A#\",\r\n      \"Bb\",\r\n      \"Ax\",\r\n      \"B\",\r\n      \"Cb\",\r\n      \"B#\",\r\n      \"C\",\r\n      \"Bx\",\r\n      \"C#\",\r\n      \"Db\",\r\n      \"Cx\",\r\n      \"D\",\r\n      \"Ebb\",\r\n      \"D#\",\r\n      \"Eb\",\r\n      \"Dx\",\r\n      \"E\",\r\n      \"Fb\",\r\n      \"E#\",\r\n      \"F\",\r\n      \"Ex\",\r\n      \"F#\",\r\n      \"Gb\",\r\n      \"Fx\",\r\n      \"G\",\r\n      \"Fx#\",\r\n      \"G#\",\r\n      \"Ab\",\r\n      \"Gx\",\r\n    ];\r\n    const tuningData = TuningMath.getEqualTemperamentData(\r\n      31,\r\n      2,\r\n      rootFreq,\r\n      noteNames\r\n    );\r\n    tuningData.name = \"31EDO\";\r\n    return tuningData;\r\n  },\r\n\r\n  get41EdoData(rootFreq: number): TuningData {\r\n    var noteNames: string[] = [\r\n      \"D\",\r\n      \"^D\",\r\n      \"^^D\",\r\n      \"vD#\",\r\n      \"D#\",\r\n      \"^D#\",\r\n      \"vE\",\r\n      \"E\",\r\n      \"^E\",\r\n      \"vF\",\r\n      \"F\",\r\n      \"^F\",\r\n      \"^^F\",\r\n      \"vF#\",\r\n      \"F#\",\r\n      \"^F#\",\r\n      \"vG\",\r\n      \"G\",\r\n      \"^G\",\r\n      \"^^G\",\r\n      \"vG#\",\r\n      \"G#\",\r\n      \"vvA\",\r\n      \"vA\",\r\n      \"A\",\r\n      \"^A\",\r\n      \"^^A\",\r\n      \"vA#\",\r\n      \"A#\",\r\n      \"^A#\",\r\n      \"vB\",\r\n      \"B\",\r\n      \"^B\",\r\n      \"vC\",\r\n      \"C\",\r\n      \"^C\",\r\n      \"^^C\",\r\n      \"vC#\",\r\n      \"C#\",\r\n      \"C#^\",\r\n      \"vD\",\r\n      \"D\",\r\n    ];\r\n    const tuningData = TuningMath.getEqualTemperamentData(\r\n      41,\r\n      2,\r\n      rootFreq,\r\n      noteNames\r\n    );\r\n    tuningData.name = \"41EDO\";\r\n    return tuningData;\r\n  },\r\n};\r\n\r\nexport default tuningData;\r\n","import DefaultTuningData from \"./DefaultTuningData\";\r\nimport { TuningData } from \"./TuningMath\";\r\n\r\nconst LocalData = {\r\n  setRootNote(rootNote: number) {\r\n    localStorage.setItem(\"rootNote\", rootNote.toString());\r\n  },\r\n  getRootNote() {\r\n    const rootNoteText = localStorage.getItem(\"rootNote\") || \"440\";\r\n    return parseFloat(rootNoteText);\r\n  },\r\n  getCurrentTuningIndex(): number {\r\n    const currentTuningIndexText =\r\n      localStorage.getItem(\"currentTuningIndex\") || \"0\";\r\n    var currentTuningIndex = parseInt(currentTuningIndexText);\r\n    return currentTuningIndex;\r\n  },\r\n  setCurrentTuningIndex(index: number) {\r\n    localStorage.setItem(\"currentTuningIndex\", index.toString());\r\n  },\r\n  getTuningList(): TuningData[] {\r\n    try {\r\n      const tuningListText = localStorage.getItem(\"tuningList\") || \"emptyData\";\r\n      var tuningList = JSON.parse(tuningListText);\r\n      return tuningList;\r\n    } catch (e) {\r\n      var data: TuningData[] = [\r\n        DefaultTuningData.get12EdoData(this.getRootNote()),\r\n        DefaultTuningData.get19EdoData(this.getRootNote()),\r\n        DefaultTuningData.get22EdoData(this.getRootNote()),\r\n        DefaultTuningData.get31EdoData(this.getRootNote()),\r\n        DefaultTuningData.get41EdoData(this.getRootNote()),\r\n      ];\r\n      return data;\r\n    }\r\n  },\r\n};\r\n\r\nexport default LocalData;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Button, Container, Grid, Typography } from \"@material-ui/core\";\r\nimport TunerGauge from \"./TunerGauge\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport FrequencyAnalyzer from \"../core/FrequencyAnalyzer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TunerAnalyzer from \"../core/TunerAnalyzer\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TuningMath from \"../core/TuningMath\";\r\nimport LocalData from \"../core/LocalData\";\r\nimport DefaultTuningData from \"../core/DefaultTuningData\";\r\n\r\nconst useStyles = makeStyles({\r\n  tunedNote: {\r\n    color: \"green\",\r\n    textShadow: \"3px 3px 12px green\",\r\n  },\r\n});\r\n\r\nfunction Tuner(props: any) {\r\n  const classes = useStyles();\r\n\r\n  const [centsOff, setCentsOff] = useState<number>(0);\r\n  const [noteName, setNoteName] = useState<string>(\"\");\r\n  const [noteIndex, setNoteIndex] = useState<string>(\"\");\r\n  const [rootFreq] = useState<number>(LocalData.getRootNote());\r\n  const [currentTuningIndex] = useState<number>(\r\n    LocalData.getCurrentTuningIndex()\r\n  );\r\n  const [tuningName, setTuningName] = useState<string>(\"\");\r\n  const [frequency, setFrequency] = useState<number>(0);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    var tuningData = LocalData.getTuningList()[currentTuningIndex];\r\n    setTuningName(tuningData?.name || \"\");\r\n\r\n    const analyzer = new FrequencyAnalyzer((freq: number) => {\r\n      setFrequency(freq);\r\n\r\n      if (tuningData !== undefined) {\r\n        var analyzedNote = TunerAnalyzer.analyzeFrequency(\r\n          tuningData,\r\n          freq,\r\n          rootFreq\r\n        );\r\n        //console.log(\"analyzedNote\", analyzedNote);\r\n\r\n        setCentsOff(analyzedNote.centsOff);\r\n        setNoteName(analyzedNote.noteName);\r\n        setNoteIndex(analyzedNote.noteIndex.toString());\r\n      }\r\n    });\r\n    analyzer.start();\r\n\r\n    return () => {\r\n      analyzer.stop();\r\n    };\r\n  }, [rootFreq, currentTuningIndex]);\r\n\r\n  const noteStyle =\r\n    Math.abs(centsOff) <= TuningMath.JND_CENTS ? classes.tunedNote : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Box pt={2}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={7}>\r\n            <Typography variant=\"caption\">Tuning</Typography>\r\n            <Button\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              endIcon={<ArrowDropDownIcon />}\r\n              style={{ textTransform: \"none\" }}\r\n              onClick={() => history.push(\"/tuning\")}\r\n            >\r\n              {tuningName}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Typography variant=\"caption\">Root note</Typography>\r\n            <Button\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              endIcon={<ArrowDropDownIcon />}\r\n              style={{ textTransform: \"none\" }}\r\n              onClick={() => history.push(\"/rootNote\")}\r\n            >\r\n              {rootFreq} Hz\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* <Box textAlign=\"center\" mt={5}>\r\n          <Typography variant=\"h3\">C#</Typography>\r\n        </Box> */}\r\n        <Box mt={4}>\r\n          <Grid container alignItems=\"center\">\r\n            <Grid item xs={4}>\r\n              <Typography variant=\"subtitle1\">\r\n                {frequency.toFixed(2)}Hz\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Box textAlign=\"center\">\r\n                <Typography variant=\"h3\" className={noteStyle}>\r\n                  {noteName || noteIndex}\r\n                </Typography>\r\n                {!!noteName && (\r\n                  <Typography variant=\"body2\">Index: {noteIndex}</Typography>\r\n                )}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Box textAlign=\"right\">\r\n                <Typography variant=\"subtitle2\">\r\n                  {centsOff.toFixed(0)} cents\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <TunerGauge value={centsOff} />\r\n        {/* <Grid container>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"subtitle1\">130Hz</Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Box textAlign=\"right\">\r\n              <Typography variant=\"subtitle2\">-8 cents</Typography>\r\n            </Box>\r\n          </Grid>\r\n        </Grid> */}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tuner;\r\n","import { AppBar, Box, Container, Toolbar, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport Permission from \"../components/Permission\";\r\nimport Tuner from \"../components/Tuner\";\r\n//import TunerBar from \"../components/TunerBar\";\r\n//import TunerGauge from \"../components/TunerGauge\";\r\n\r\nfunction Home() {\r\n  const isMicAlreadyAllowed = !!(window as any)[\"isMicAlreadyAllowed\"];\r\n\r\n  const [micAllowed, setMicAllowed] = useState(isMicAlreadyAllowed);\r\n  function handleAllow() {\r\n    setMicAllowed(true);\r\n    (window as any)[\"isMicAlreadyAllowed\"] = true;\r\n  }\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Box textAlign=\"center\" style={{ width: \"100%\" }}>\r\n            <Typography variant=\"h6\">Microtonal Tuner</Typography>\r\n          </Box>\r\n          {/* <Button color=\"inherit\">Login</Button> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Container maxWidth=\"sm\">\r\n        {!micAllowed && <Permission onAllow={handleAllow} />}\r\n        {micAllowed && <Tuner />}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Box,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface TopBarProps {\r\n  title: string;\r\n}\r\nfunction TopBar(props: TopBarProps) {\r\n  const history = useHistory();\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={() => history.goBack()}\r\n        >\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n        <Box textAlign=\"center\" style={{ width: \"100%\" }}>\r\n          <Typography variant=\"h6\">{props.title}</Typography>\r\n        </Box>\r\n        <IconButton style={{ visibility: \"hidden\" }}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default TopBar;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  IconButton,\r\n  InputAdornment,\r\n  TextField,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TopBar from \"../components/TopBar\";\r\nimport LocalData from \"../core/LocalData\";\r\n\r\nfunction RootNote() {\r\n  const history = useHistory();\r\n  const [rootNoteValue, setRootNoteValue] = useState(LocalData.getRootNote());\r\n\r\n  const handleSave = () => {\r\n    if (!rootNoteValue || rootNoteValue <= 0) {\r\n      return;\r\n    }\r\n\r\n    LocalData.setRootNote(rootNoteValue);\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar title=\"Choose the root note\" />\r\n      <Container maxWidth=\"sm\">\r\n        <p>\r\n          Choose the root note frequency used as starting point to tuning the\r\n          other notes. Usually it is setted to A = 440Hz (Pitch Stardard).\r\n        </p>\r\n        <Box my={3} textAlign=\"center\">\r\n          <TextField\r\n            label=\"Root note\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            inputProps={{\r\n              step: \"0.1\",\r\n              min: 20,\r\n              max: 20000,\r\n            }}\r\n            InputProps={{\r\n              endAdornment: <InputAdornment position=\"end\">Hz</InputAdornment>,\r\n            }}\r\n            value={rootNoteValue}\r\n            onChange={(e) => setRootNoteValue(parseFloat(e.target.value) || 0)}\r\n          />\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          fullWidth\r\n          onClick={handleSave}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RootNote;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TopBar from \"../components/TopBar\";\r\nimport LocalData from \"../core/LocalData\";\r\nimport { TuningData } from \"../core/TuningMath\";\r\n\r\nfunction TuningList() {\r\n  const history = useHistory();\r\n\r\n  const tuningListData = LocalData.getTuningList();\r\n  const handleClick = (index: number) => {\r\n    LocalData.setCurrentTuningIndex(index);\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <div>\r\n      <TopBar title=\"Choose your tuning\" />\r\n      <Container maxWidth=\"sm\">\r\n        <List component=\"nav\">\r\n          {tuningListData.map((item, index) => (\r\n            <>\r\n              <ListItem\r\n                key={`${index}-${item?.name}`}\r\n                button\r\n                onClick={() => handleClick(index)}\r\n              >\r\n                <Box p={1}>{item.name}</Box>\r\n                {/* <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" aria-label=\"more\">\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction> */}\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TuningList;\r\n","import React from \"react\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport RootNote from \"./pages/RootNote\";\nimport Tuning from \"./pages/TuningList\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/tuning\">\n          <Tuning />\n        </Route>\n        <Route path=\"/rootNote\">\n          <RootNote />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { red } from \"@material-ui/core/colors\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#556cd6\",\r\n    },\r\n    secondary: {\r\n      main: \"#19857b\",\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport App from \"./App\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}